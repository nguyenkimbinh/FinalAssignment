/*
 * mainframe.java
 *
 * Created on __DATE__, __TIME__
 */

package com.gui;

import java.io.*;
import java.nio.file.Files;
//import java.io.FileInputStream;
//import java.io.FileOutputStream;
//import java.io.IOException;
//import java.io.InputStream;
//import java.io.OutputStream;
import java.nio.file.StandardCopyOption.*;

import javax.swing.JButton;
import javax.swing.JFileChooser;

/**
 * 
 * @author __USER__
 */
public class mainframe extends javax.swing.JFrame {

	/** Creates new form mainframe */
	// my variables
	File[] files;
	File des;

	public mainframe() {
		initComponents();
		// //Create the log first, because the action listeners
		// //need to refer to it.
		// log = new JTextArea(5,20);
		// log.setMargin(new Insets(5,5,5,5));
		// log.setEditable(false);
		// JScrollPane logScrollPane = new JScrollPane(log);
		//
		// //Create a file chooser
		// fc = new JFileChooser();
		//
		// //Uncomment one of the following lines to try a different
		// //file selection mode. The first allows just directories
		// //to be selected (and, at least in the Java look and feel,
		// //shown). The second allows both files and directories
		// //to be selected. If you leave these lines commented out,
		// //then the default mode (FILES_ONLY) will be used.
		// //
		// //fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		// //fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
		//
		// //Create the open button. We use the image from the JLF
		// //Graphics Repository (but we extracted it from the jar).
		// openButton = new JButton("Open a File...",
		// createImageIcon("images/Open16.gif"));
		// openButton.addActionListener(this);
		//
		// //Create the save button. We use the image from the JLF
		// //Graphics Repository (but we extracted it from the jar).
		// saveButton = new JButton("Save a File...",
		// createImageIcon("images/Save16.gif"));
		// saveButton.addActionListener(this);
		//
		// //For layout purposes, put the buttons in a separate panel
		// JPanel buttonPanel = new JPanel(); //use FlowLayout
		// buttonPanel.add(openButton);
		// buttonPanel.add(saveButton);
		//
		// //Add the buttons and the log to this panel.
		// add(buttonPanel, BorderLayout.PAGE_START);
		// add(logScrollPane, BorderLayout.CENTER);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		txtInput = new javax.swing.JTextField();
		btnInput = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		txtOutput = new javax.swing.JTextField();
		btnOutput = new javax.swing.JButton();
		jLabel4 = new javax.swing.JLabel();
		btnCopy = new javax.swing.JButton();
		btnCancel = new javax.swing.JButton();
		btnExit = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tarLog = new javax.swing.JTextArea();
		progressBar = new javax.swing.JProgressBar();
		txtThread = new javax.swing.JTextField();
		chkProperties = new javax.swing.JCheckBox();
		jLabel5 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);

		jLabel1.setText("Input");

		btnInput.setText("Input");
		btnInput.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnInputActionPerformed(evt);
			}
		});

		jLabel2.setText("Output");

		btnOutput.setText("Output");
		btnOutput.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnOutputActionPerformed(evt);
			}
		});

		jLabel4.setText("Progress");

		btnCopy.setText("Copy");
		btnCopy.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCopyActionPerformed(evt);
			}
		});

		btnCancel.setText("Cancel");

		btnExit.setText("Exit");

		jLabel3.setText("Number of thread");

		tarLog.setColumns(20);
		tarLog.setRows(5);
		jScrollPane1.setViewportView(tarLog);

		chkProperties.setText("Read properties file");
		chkProperties.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actionPerformed(evt);
			}
		});

		jLabel5.setForeground(new java.awt.Color(0, 0, 255));
		jLabel5.setText("Final Exercise Java Foundation");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel2)
																				.addComponent(
																						jLabel1))
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(54,
																										54,
																										54)
																								.addComponent(
																										jLabel5))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING,
																												false)
																												.addGroup(
																														layout.createSequentialGroup()
																																.addComponent(
																																		txtInput,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		211,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addComponent(
																																		btnInput,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		Short.MAX_VALUE))
																												.addGroup(
																														layout.createSequentialGroup()
																																.addComponent(
																																		txtOutput,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		211,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addComponent(
																																		btnOutput))))))
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING)
																												.addGroup(
																														javax.swing.GroupLayout.Alignment.LEADING,
																														layout.createSequentialGroup()
																																.addComponent(
																																		jLabel4)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addComponent(
																																		progressBar,
																																		javax.swing.GroupLayout.DEFAULT_SIZE,
																																		408,
																																		Short.MAX_VALUE))
																												.addGroup(
																														javax.swing.GroupLayout.Alignment.LEADING,
																														layout.createSequentialGroup()
																																.addComponent(
																																		jLabel3)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		txtThread,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		37,
																																		javax.swing.GroupLayout.PREFERRED_SIZE)
																																.addPreferredGap(
																																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addComponent(
																																		chkProperties))
																												.addComponent(
																														jScrollPane1,
																														javax.swing.GroupLayout.Alignment.LEADING,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														465,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										btnCopy)
																								.addGap(32,
																										32,
																										32)
																								.addComponent(
																										btnCancel)
																								.addGap(46,
																										46,
																										46)
																								.addComponent(
																										btnExit)
																								.addGap(77,
																										77,
																										77)))
																.addGap(228,
																		228,
																		228)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jLabel5)
																.addGap(19, 19,
																		19)
																.addComponent(
																		jLabel1)
																.addGap(13, 13,
																		13)
																.addComponent(
																		jLabel2))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(29, 29,
																		29)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						txtInput,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						btnInput))
																.addGap(13, 13,
																		13)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						txtOutput,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						btnOutput))))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(
														txtThread,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(chkProperties))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel4)
												.addComponent(
														progressBar,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnCopy)
												.addComponent(btnExit)
												.addComponent(btnCancel))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		txtOutput.getAccessibleContext().setAccessibleName("output");

		pack();
	}// </editor-fold>
		// GEN-END:initComponents

	private void btnCopyActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		for (File file : files) {
			try {
				copyDirectory(files[0], new File("D:\\Test\\"));
			} catch (IOException e) {
				// TODO: handle exception
				this.tarLog.append(e.getMessage() + "\n");
			}
		}
	}

	
	public Void doInBackground() {
		int progress = 0;
		
		long bytesCopied = 0;
		
		while (progress < 100 && !isCancelled()) {                 
			// copy the files to the destination directory
			for (File f : files) {
				File destFile = new File(destDir, f.getName());
				long previousLen = 0;
				
				try {
					InputStream in = new FileInputStream(f);
					OutputStream out = new FileOutputStream(destFile);                    
					byte[] buf = new byte[1024];
					int counter = 0;
					int len;
					
					
					in.close();
					out.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}

	public void copyDirectory(File sourceLocation, File targetLocation)
			throws IOException {
		if (sourceLocation.isDirectory()) {
			if (!targetLocation.exists()) {
				targetLocation.mkdir();
			}

			String[] children = sourceLocation.list();
			for (int i = 0; i < children.length; i++) {
				copyDirectory(new File(sourceLocation, children[i]), new File(
						targetLocation, children[i]));
			}
		} else {

			InputStream in = new FileInputStream(sourceLocation);
			OutputStream out = new FileOutputStream(targetLocation);

			// Copy the bits from instream to outstream
			byte[] buf = new byte[1024];
			int len;
			while ((len = in.read(buf)) > 0) {
				out.write(buf, 0, len);
				// increment counter
				// check if counter is above next 1% of size of your dirs

				// if you are then update progress bar by one percent
			}
			in.close();
			out.close();
		}
	}

	private void btnOutputActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here
		final JFileChooser chooser = new JFileChooser();
		if (evt.getSource() == btnOutput) {
			// chooser.setCurrentDirectory(new java.io.File("."));
			chooser.setDialogTitle("choose output file or folder");
			chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
			chooser.setAcceptAllFileFilterUsed(true);
			if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
				this.txtOutput
						.setText(chooser.getCurrentDirectory().toString());
				des = new File(chooser.getCurrentDirectory().toString());
			}
		}
	}

	private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		final JFileChooser chooser = new JFileChooser();

		if (evt.getSource() == btnInput) {
			chooser.setMultiSelectionEnabled(true);
			int selectFiles = chooser.showOpenDialog(mainframe.this);
			if (selectFiles == JFileChooser.APPROVE_OPTION) {
				files = chooser.getSelectedFiles();
				String path = "";
				for (int i = 0; i < files.length; i++) {
					File file = files[i];
					path += file.getPath() + ";";
					this.tarLog.append("Added:" + file.getPath() + "\n");
				}
				path = path.substring(0, path.lastIndexOf(";"));
				this.txtInput.setText(path);
			} else {
				// this.txtInput.setText("Open command cancelled by user.");
			}
		}
	}

	private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new mainframe().setVisible(true);
			}
		});
	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton btnCancel;
	private javax.swing.JButton btnCopy;
	private javax.swing.JButton btnExit;
	private javax.swing.JButton btnInput;
	private javax.swing.JButton btnOutput;
	private javax.swing.JCheckBox chkProperties;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JProgressBar progressBar;
	private javax.swing.JTextArea tarLog;
	private javax.swing.JTextField txtInput;
	private javax.swing.JTextField txtOutput;
	private javax.swing.JTextField txtThread;
	// End of variables declaration//GEN-END:variables

}